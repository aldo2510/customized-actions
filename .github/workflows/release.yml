name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      version:
        description: "x.y.z"
        required: true
        type: string
      prerelease:
        description: "Marcar como prerelease"
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      # Resuelve el TAG correctamente para ambos casos (push de tag o dispatch)
      TAG: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('v{0}', inputs.version) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # üß± Build todas las acciones sin lockfile
      - name: Build all actions
        run: |
          echo "Construyendo todas las acciones..."
          for d in .github/actions/*; do
            if [ -f "$d/package.json" ]; then
              echo "---- $d ----"
              (cd "$d" && npm install && npm run build)
            fi
          done

          # Verifica dist/ commiteado
          if ! git diff --quiet -- .github/actions/*/dist; then
            echo "::error ::Hay cambios en dist/ sin commitear. Ejecuta 'npm run build' y sube dist/ antes del release."
            exit 1
          fi

      # üè∑Ô∏è Crea el tag si vienes por dispatch
      - name: Crear tag desde dispatch (si aplica)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          V="${{ inputs.version }}"
          [[ "$V" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] || { echo "::error ::Versi√≥n inv√°lida (usa x.y.z)"; exit 1; }
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag "v$V" -m "Release v$V"
          git push origin "v$V"

      # üßæ Asegura que el Release exista (crea si falta)
      - name: Crear Release vac√≠o si no existe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! gh release view "$TAG" >/dev/null 2>&1; then
            echo "Release $TAG no existe. Creando..."
            gh release create "$TAG" --title "$TAG" --notes "Release $TAG" ${{ inputs.prerelease && '--prerelease' || '' }}
          else
            echo "Release $TAG ya existe."
          fi

      # ‚¨ÜÔ∏è Sube artefactos (dist de todas las acciones)
      - name: Subir assets al Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.TAG }}
          prerelease: ${{ inputs.prerelease || false }}
          generate_release_notes: true
          fail_on_unmatched_files: false
          append_body: false
          files: |
            .github/actions/**/dist/**

      # üîÅ Alias mayor (v1 ‚Üí vX.Y.Z)
      - name: Alias mayor (v1 ‚Üí vX.Y.Z)
        run: |
          echo "TAG=${TAG}"
          MAJOR="${TAG%%.*}"  # ej. v1 de v1.2.3
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -fa "$MAJOR" -m "Update $MAJOR to $TAG" "$TAG"
          git push origin "$MAJOR" --force
